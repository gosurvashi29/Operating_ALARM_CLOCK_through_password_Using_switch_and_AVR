
SWITCHpaswrdALARMCLOCK.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ac  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000056  00800060  000006ac  00000720  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000778  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000082  00000000  00000000  00000e44  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000ec6  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000ef5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f10  00000000  00000000  00000f5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001e9  00000000  00000000  00001e6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003f0  00000000  00000000  00002056  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00002448  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000023c  00000000  00000000  0000252c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ce2  00000000  00000000  00002768  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  0000344a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ea       	ldi	r30, 0xAC	; 172
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 3b       	cpi	r26, 0xB6	; 182
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 af 01 	call	0x35e	; 0x35e <main>
  7a:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_Z8disp_keyv>:
int disp_key()
{
	while (1)
	{
		
		if (PINA==0b11111110)
  82:	89 b3       	in	r24, 0x19	; 25
  84:	8e 3f       	cpi	r24, 0xFE	; 254
  86:	41 f4       	brne	.+16     	; 0x98 <_Z8disp_keyv+0x16>
		{
			while (PINA==0XFE);
  88:	89 b3       	in	r24, 0x19	; 25
  8a:	8e 3f       	cpi	r24, 0xFE	; 254
  8c:	e9 f3       	breq	.-6      	; 0x88 <_Z8disp_keyv+0x6>
			
			
			PORTB=0b00000001;//1
  8e:	81 e0       	ldi	r24, 0x01	; 1
  90:	88 bb       	out	0x18, r24	; 24
			
			return 1;
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	30 e0       	ldi	r19, 0x00	; 0
  96:	63 c0       	rjmp	.+198    	; 0x15e <_Z8disp_keyv+0xdc>
			
			
		}
		
		else if (PINA==0b11111101)
  98:	89 b3       	in	r24, 0x19	; 25
  9a:	8d 3f       	cpi	r24, 0xFD	; 253
  9c:	41 f4       	brne	.+16     	; 0xae <_Z8disp_keyv+0x2c>
		{
			while (PINA==0XFD);
  9e:	89 b3       	in	r24, 0x19	; 25
  a0:	8d 3f       	cpi	r24, 0xFD	; 253
  a2:	e9 f3       	breq	.-6      	; 0x9e <_Z8disp_keyv+0x1c>
			PORTB=0b00000010;//2
  a4:	82 e0       	ldi	r24, 0x02	; 2
  a6:	88 bb       	out	0x18, r24	; 24
			
			return 2;
  a8:	22 e0       	ldi	r18, 0x02	; 2
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	58 c0       	rjmp	.+176    	; 0x15e <_Z8disp_keyv+0xdc>
		}
		else if (PINA==0b11111011)
  ae:	89 b3       	in	r24, 0x19	; 25
  b0:	8b 3f       	cpi	r24, 0xFB	; 251
  b2:	41 f4       	brne	.+16     	; 0xc4 <_Z8disp_keyv+0x42>
		{
			while (PINA==0XFB);
  b4:	89 b3       	in	r24, 0x19	; 25
  b6:	8b 3f       	cpi	r24, 0xFB	; 251
  b8:	e9 f3       	breq	.-6      	; 0xb4 <_Z8disp_keyv+0x32>
			PORTB=0b00000100;//3
  ba:	84 e0       	ldi	r24, 0x04	; 4
  bc:	88 bb       	out	0x18, r24	; 24
			
			return 3;
  be:	23 e0       	ldi	r18, 0x03	; 3
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	4d c0       	rjmp	.+154    	; 0x15e <_Z8disp_keyv+0xdc>
		}
		else if (PINA==0b11110111)
  c4:	89 b3       	in	r24, 0x19	; 25
  c6:	87 3f       	cpi	r24, 0xF7	; 247
  c8:	41 f4       	brne	.+16     	; 0xda <_Z8disp_keyv+0x58>
		{
			while (PINA==0XF7);
  ca:	89 b3       	in	r24, 0x19	; 25
  cc:	87 3f       	cpi	r24, 0xF7	; 247
  ce:	e9 f3       	breq	.-6      	; 0xca <_Z8disp_keyv+0x48>
			PORTB=0b00001000;//4
  d0:	88 e0       	ldi	r24, 0x08	; 8
  d2:	88 bb       	out	0x18, r24	; 24
			
			return 4;
  d4:	24 e0       	ldi	r18, 0x04	; 4
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	42 c0       	rjmp	.+132    	; 0x15e <_Z8disp_keyv+0xdc>
		}
		else if (PINA==0b11101111)
  da:	89 b3       	in	r24, 0x19	; 25
  dc:	8f 3e       	cpi	r24, 0xEF	; 239
  de:	41 f4       	brne	.+16     	; 0xf0 <_Z8disp_keyv+0x6e>
		{
			while (PINA==0XEF);
  e0:	89 b3       	in	r24, 0x19	; 25
  e2:	8f 3e       	cpi	r24, 0xEF	; 239
  e4:	e9 f3       	breq	.-6      	; 0xe0 <_Z8disp_keyv+0x5e>
			PORTB=0b00010000;//5
  e6:	80 e1       	ldi	r24, 0x10	; 16
  e8:	88 bb       	out	0x18, r24	; 24
			
			return 5;
  ea:	25 e0       	ldi	r18, 0x05	; 5
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	37 c0       	rjmp	.+110    	; 0x15e <_Z8disp_keyv+0xdc>
		}
		else if (PINA==0b11011111)
  f0:	89 b3       	in	r24, 0x19	; 25
  f2:	8f 3d       	cpi	r24, 0xDF	; 223
  f4:	41 f4       	brne	.+16     	; 0x106 <_Z8disp_keyv+0x84>
		{
			while (PINA==0XDF);
  f6:	89 b3       	in	r24, 0x19	; 25
  f8:	8f 3d       	cpi	r24, 0xDF	; 223
  fa:	e9 f3       	breq	.-6      	; 0xf6 <_Z8disp_keyv+0x74>
			PORTB=0b00100000;//6
  fc:	80 e2       	ldi	r24, 0x20	; 32
  fe:	88 bb       	out	0x18, r24	; 24
			
			return 6;
 100:	26 e0       	ldi	r18, 0x06	; 6
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	2c c0       	rjmp	.+88     	; 0x15e <_Z8disp_keyv+0xdc>
		}
		else if (PINA==0b10111111)
 106:	89 b3       	in	r24, 0x19	; 25
 108:	8f 3b       	cpi	r24, 0xBF	; 191
 10a:	41 f4       	brne	.+16     	; 0x11c <_Z8disp_keyv+0x9a>
		{
			while (PINA==0XBF);
 10c:	89 b3       	in	r24, 0x19	; 25
 10e:	8f 3b       	cpi	r24, 0xBF	; 191
 110:	e9 f3       	breq	.-6      	; 0x10c <_Z8disp_keyv+0x8a>
			PORTB=0b01000000;//7
 112:	80 e4       	ldi	r24, 0x40	; 64
 114:	88 bb       	out	0x18, r24	; 24
			
			return 7;
 116:	27 e0       	ldi	r18, 0x07	; 7
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	21 c0       	rjmp	.+66     	; 0x15e <_Z8disp_keyv+0xdc>
		}
		else if (PINA==0b01111111)
 11c:	89 b3       	in	r24, 0x19	; 25
 11e:	8f 37       	cpi	r24, 0x7F	; 127
 120:	41 f4       	brne	.+16     	; 0x132 <_Z8disp_keyv+0xb0>
		{
			while (PINA==0X7F);
 122:	89 b3       	in	r24, 0x19	; 25
 124:	8f 37       	cpi	r24, 0x7F	; 127
 126:	e9 f3       	breq	.-6      	; 0x122 <_Z8disp_keyv+0xa0>
			PORTB=0b10000000;//8
 128:	80 e8       	ldi	r24, 0x80	; 128
 12a:	88 bb       	out	0x18, r24	; 24
			
			return 8;
 12c:	28 e0       	ldi	r18, 0x08	; 8
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	16 c0       	rjmp	.+44     	; 0x15e <_Z8disp_keyv+0xdc>
		}
		else if (PIND==0b11111110)
 132:	80 b3       	in	r24, 0x10	; 16
 134:	8e 3f       	cpi	r24, 0xFE	; 254
 136:	41 f4       	brne	.+16     	; 0x148 <_Z8disp_keyv+0xc6>
		{
			while (PIND==0XFE);
 138:	80 b3       	in	r24, 0x10	; 16
 13a:	8e 3f       	cpi	r24, 0xFE	; 254
 13c:	e9 f3       	breq	.-6      	; 0x138 <_Z8disp_keyv+0xb6>
			PORTB=0b00000001;//9
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	88 bb       	out	0x18, r24	; 24
			
			return 9;
 142:	29 e0       	ldi	r18, 0x09	; 9
 144:	30 e0       	ldi	r19, 0x00	; 0
 146:	0b c0       	rjmp	.+22     	; 0x15e <_Z8disp_keyv+0xdc>
		}
		else if (PIND==0b11111101)
 148:	80 b3       	in	r24, 0x10	; 16
 14a:	8d 3f       	cpi	r24, 0xFD	; 253
 14c:	09 f0       	breq	.+2      	; 0x150 <_Z8disp_keyv+0xce>
 14e:	99 cf       	rjmp	.-206    	; 0x82 <_Z8disp_keyv>
		{
			while (PIND==0XFD);
 150:	80 b3       	in	r24, 0x10	; 16
 152:	8d 3f       	cpi	r24, 0xFD	; 253
 154:	e9 f3       	breq	.-6      	; 0x150 <_Z8disp_keyv+0xce>
			PORTB=0b00000010;//0
 156:	82 e0       	ldi	r24, 0x02	; 2
 158:	88 bb       	out	0x18, r24	; 24
			
			return 0;
 15a:	20 e0       	ldi	r18, 0x00	; 0
 15c:	30 e0       	ldi	r19, 0x00	; 0
		//	PORTB=0b00000100;//0
			
			//return ;
		//}
	}
}
 15e:	82 2f       	mov	r24, r18
 160:	93 2f       	mov	r25, r19
 162:	08 95       	ret

00000164 <_Z8disp_cmdj>:
	disp_data(0X1F);
	disp_data(0X02);
}
void disp_cmd(unsigned int cmd)
{
	PORTC=((cmd & 0XF0)+0X04);
 164:	9c 01       	movw	r18, r24
 166:	20 7f       	andi	r18, 0xF0	; 240
 168:	33 27       	eor	r19, r19
 16a:	2c 5f       	subi	r18, 0xFC	; 252
 16c:	25 bb       	out	0x15, r18	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 16e:	e9 ef       	ldi	r30, 0xF9	; 249
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	31 97       	sbiw	r30, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <_Z8disp_cmdj+0xe>
 176:	00 c0       	rjmp	.+0      	; 0x178 <_Z8disp_cmdj+0x14>
 178:	00 00       	nop
	_delay_ms(1);
	PORTC=PORTC - 0X04;
 17a:	95 b3       	in	r25, 0x15	; 21
 17c:	94 50       	subi	r25, 0x04	; 4
 17e:	95 bb       	out	0x15, r25	; 21
	PORTC=(((cmd<<4)& 0XF0)+0X04);
 180:	82 95       	swap	r24
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	8c 5f       	subi	r24, 0xFC	; 252
 186:	85 bb       	out	0x15, r24	; 21
 188:	89 ef       	ldi	r24, 0xF9	; 249
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <_Z8disp_cmdj+0x28>
 190:	00 c0       	rjmp	.+0      	; 0x192 <_Z8disp_cmdj+0x2e>
 192:	00 00       	nop
	_delay_ms(1);
	PORTC=PORTC-0X04;
 194:	85 b3       	in	r24, 0x15	; 21
 196:	84 50       	subi	r24, 0x04	; 4
 198:	85 bb       	out	0x15, r24	; 21
 19a:	08 95       	ret

0000019c <_Z9disp_datai>:
	
}
void disp_data( int cmd)
{
	PORTC=((cmd  & 0XF0)+0X05);
 19c:	9c 01       	movw	r18, r24
 19e:	20 7f       	andi	r18, 0xF0	; 240
 1a0:	33 27       	eor	r19, r19
 1a2:	2b 5f       	subi	r18, 0xFB	; 251
 1a4:	25 bb       	out	0x15, r18	; 21
 1a6:	e9 ef       	ldi	r30, 0xF9	; 249
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	31 97       	sbiw	r30, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <_Z9disp_datai+0xe>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <_Z9disp_datai+0x14>
 1b0:	00 00       	nop
	_delay_ms(1);
	PORTC=PORTC - 0X04;
 1b2:	25 b3       	in	r18, 0x15	; 21
 1b4:	24 50       	subi	r18, 0x04	; 4
 1b6:	25 bb       	out	0x15, r18	; 21
	PORTC=(((cmd <<4)& 0XF0)+0X05);
 1b8:	82 95       	swap	r24
 1ba:	92 95       	swap	r25
 1bc:	90 7f       	andi	r25, 0xF0	; 240
 1be:	98 27       	eor	r25, r24
 1c0:	80 7f       	andi	r24, 0xF0	; 240
 1c2:	98 27       	eor	r25, r24
 1c4:	8b 5f       	subi	r24, 0xFB	; 251
 1c6:	85 bb       	out	0x15, r24	; 21
 1c8:	89 ef       	ldi	r24, 0xF9	; 249
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <_Z9disp_datai+0x30>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <_Z9disp_datai+0x36>
 1d2:	00 00       	nop
	_delay_ms(1);
	PORTC=PORTC-0X04;
 1d4:	85 b3       	in	r24, 0x15	; 21
 1d6:	84 50       	subi	r24, 0x04	; 4
 1d8:	85 bb       	out	0x15, r24	; 21
 1da:	08 95       	ret

000001dc <_Z21special_charringbell3v>:
	disp_data(0X1F);
	disp_data(0X04);
}
void special_charringbell3()//4
{
	disp_cmd(0X60);
 1dc:	80 e6       	ldi	r24, 0x60	; 96
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
	disp_data(0X04);
 1e4:	84 e0       	ldi	r24, 0x04	; 4
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X0E);
 1ec:	8e e0       	ldi	r24, 0x0E	; 14
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X11);
 1f4:	81 e1       	ldi	r24, 0x11	; 17
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	
	disp_data(0X11);
 1fc:	81 e1       	ldi	r24, 0x11	; 17
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X11);
 204:	81 e1       	ldi	r24, 0x11	; 17
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X1F);
 20c:	8f e1       	ldi	r24, 0x1F	; 31
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X02);
 214:	82 e0       	ldi	r24, 0x02	; 2
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
 21c:	08 95       	ret

0000021e <_Z21special_charringbell2v>:
	
	
}
void special_charringbell2()//3
{
	disp_cmd(0X58);
 21e:	88 e5       	ldi	r24, 0x58	; 88
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
	disp_data(0X04);
 226:	84 e0       	ldi	r24, 0x04	; 4
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X0E);
 22e:	8e e0       	ldi	r24, 0x0E	; 14
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X11);
 236:	81 e1       	ldi	r24, 0x11	; 17
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	
	disp_data(0X11);
 23e:	81 e1       	ldi	r24, 0x11	; 17
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X11);
 246:	81 e1       	ldi	r24, 0x11	; 17
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X1F);
 24e:	8f e1       	ldi	r24, 0x1F	; 31
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X04);
 256:	84 e0       	ldi	r24, 0x04	; 4
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
 25e:	08 95       	ret

00000260 <_Z21special_charringbell1v>:

void special_charringbell1()//2
{
	
	
	disp_cmd(0X50);
 260:	80 e5       	ldi	r24, 0x50	; 80
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
	disp_data(0X04);
 268:	84 e0       	ldi	r24, 0x04	; 4
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X0E);
 270:	8e e0       	ldi	r24, 0x0E	; 14
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X11);
 278:	81 e1       	ldi	r24, 0x11	; 17
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	
	disp_data(0X11);
 280:	81 e1       	ldi	r24, 0x11	; 17
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X11);
 288:	81 e1       	ldi	r24, 0x11	; 17
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X1F);
 290:	8f e1       	ldi	r24, 0x1F	; 31
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	disp_data(0X08);
 298:	88 e0       	ldi	r24, 0x08	; 8
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
 2a0:	08 95       	ret

000002a2 <_Z11disp_stringPc>:
	PORTC=PORTC-0X04;
	
}

void disp_string( char *str)
{
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	ec 01       	movw	r28, r24
	int i=0;
	while (str[i]!='\0')
 2a8:	88 81       	ld	r24, Y
 2aa:	88 23       	and	r24, r24
 2ac:	39 f0       	breq	.+14     	; 0x2bc <_Z11disp_stringPc+0x1a>
	_delay_ms(1);
	PORTC=PORTC-0X04;
	
}

void disp_string( char *str)
 2ae:	21 96       	adiw	r28, 0x01	; 1
{
	int i=0;
	while (str[i]!='\0')
	{
		disp_data (str[i]);
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
}

void disp_string( char *str)
{
	int i=0;
	while (str[i]!='\0')
 2b6:	89 91       	ld	r24, Y+
 2b8:	81 11       	cpse	r24, r1
 2ba:	fa cf       	rjmp	.-12     	; 0x2b0 <_Z11disp_stringPc+0xe>
	{
		disp_data (str[i]);
		i++;
		
	}
}
 2bc:	df 91       	pop	r29
 2be:	cf 91       	pop	r28
 2c0:	08 95       	ret

000002c2 <_Z8disp_numj>:

void disp_num(unsigned int num)
{
 2c2:	0f 93       	push	r16
 2c4:	1f 93       	push	r17
 2c6:	cf 93       	push	r28
 2c8:	df 93       	push	r29
 2ca:	ec 01       	movw	r28, r24
	int a=0;
	if (num==0)
 2cc:	00 97       	sbiw	r24, 0x00	; 0
 2ce:	61 f5       	brne	.+88     	; 0x328 <_Z8disp_numj+0x66>
	{
		disp_data(48);
 2d0:	80 e3       	ldi	r24, 0x30	; 48
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
	}
	disp_cmd (0X04);
 2d8:	84 e0       	ldi	r24, 0x04	; 4
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
 2e0:	28 c0       	rjmp	.+80     	; 0x332 <_Z8disp_numj+0x70>
	while (num!=0)
	{
		a=num % 10;
 2e2:	9e 01       	movw	r18, r28
 2e4:	ad ec       	ldi	r26, 0xCD	; 205
 2e6:	bc ec       	ldi	r27, 0xCC	; 204
 2e8:	0e 94 48 03 	call	0x690	; 0x690 <__umulhisi3>
 2ec:	8c 01       	movw	r16, r24
 2ee:	16 95       	lsr	r17
 2f0:	07 95       	ror	r16
 2f2:	16 95       	lsr	r17
 2f4:	07 95       	ror	r16
 2f6:	16 95       	lsr	r17
 2f8:	07 95       	ror	r16
 2fa:	98 01       	movw	r18, r16
 2fc:	22 0f       	add	r18, r18
 2fe:	33 1f       	adc	r19, r19
 300:	c8 01       	movw	r24, r16
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	88 0f       	add	r24, r24
 30c:	99 1f       	adc	r25, r25
 30e:	82 0f       	add	r24, r18
 310:	93 1f       	adc	r25, r19
 312:	9e 01       	movw	r18, r28
 314:	28 1b       	sub	r18, r24
 316:	39 0b       	sbc	r19, r25
 318:	c9 01       	movw	r24, r18
		disp_data(a+48);
 31a:	c0 96       	adiw	r24, 0x30	; 48
 31c:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
		num=num/10;
 320:	e8 01       	movw	r28, r16
	if (num==0)
	{
		disp_data(48);
	}
	disp_cmd (0X04);
	while (num!=0)
 322:	20 97       	sbiw	r28, 0x00	; 0
 324:	f1 f6       	brne	.-68     	; 0x2e2 <_Z8disp_numj+0x20>
 326:	05 c0       	rjmp	.+10     	; 0x332 <_Z8disp_numj+0x70>
	int a=0;
	if (num==0)
	{
		disp_data(48);
	}
	disp_cmd (0X04);
 328:	84 e0       	ldi	r24, 0x04	; 4
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
 330:	d8 cf       	rjmp	.-80     	; 0x2e2 <_Z8disp_numj+0x20>
	{
		a=num % 10;
		disp_data(a+48);
		num=num/10;
	}
}
 332:	df 91       	pop	r29
 334:	cf 91       	pop	r28
 336:	1f 91       	pop	r17
 338:	0f 91       	pop	r16
 33a:	08 95       	ret

0000033c <_Z8lcd_initv>:
void lcd_init()
{
	disp_cmd(0X02);
 33c:	82 e0       	ldi	r24, 0x02	; 2
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
	disp_cmd(0X28);
 344:	88 e2       	ldi	r24, 0x28	; 40
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
	disp_cmd(0X0C);
 34c:	8c e0       	ldi	r24, 0x0C	; 12
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
	disp_cmd(0X06);
 354:	86 e0       	ldi	r24, 0x06	; 6
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
 35c:	08 95       	ret

0000035e <main>:
void special_charringbell1();//2
void special_charringbell2();//3
void special_charringbell3();//4
int disp_key();
int main(void)
{
 35e:	cf 93       	push	r28
 360:	df 93       	push	r29
 362:	cd b7       	in	r28, 0x3d	; 61
 364:	de b7       	in	r29, 0x3e	; 62
 366:	2a 97       	sbiw	r28, 0x0a	; 10
 368:	0f b6       	in	r0, 0x3f	; 63
 36a:	f8 94       	cli
 36c:	de bf       	out	0x3e, r29	; 62
 36e:	0f be       	out	0x3f, r0	; 63
 370:	cd bf       	out	0x3d, r28	; 61
	DDRA=0X00;
 372:	1a ba       	out	0x1a, r1	; 26
	DDRB=0XFF;
 374:	8f ef       	ldi	r24, 0xFF	; 255
 376:	87 bb       	out	0x17, r24	; 23
	PORTA=0XFF;
 378:	8b bb       	out	0x1b, r24	; 27
	DDRC = 0XFF;
 37a:	84 bb       	out	0x14, r24	; 20
	DDRD=0X00;
 37c:	11 ba       	out	0x11, r1	; 17
	PORTD=0XFF;
 37e:	82 bb       	out	0x12, r24	; 18

	lcd_init();
 380:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8lcd_initv>
	special_charringbell1();//2
 384:	0e 94 30 01 	call	0x260	; 0x260 <_Z21special_charringbell1v>
	special_charringbell2();//3
 388:	0e 94 0f 01 	call	0x21e	; 0x21e <_Z21special_charringbell2v>
	special_charringbell3();//4
 38c:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_Z21special_charringbell3v>
	int y=0,k=0;
	int h1,h0,s1,s0,m1,m0;
	float z;
	disp_cmd(0X80);
 390:	80 e8       	ldi	r24, 0x80	; 128
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
	disp_string("WELCOME");
 398:	80 e6       	ldi	r24, 0x60	; 96
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 51 01 	call	0x2a2	; 0x2a2 <_Z11disp_stringPc>
 3a0:	2f e3       	ldi	r18, 0x3F	; 63
 3a2:	8d e0       	ldi	r24, 0x0D	; 13
 3a4:	93 e0       	ldi	r25, 0x03	; 3
 3a6:	21 50       	subi	r18, 0x01	; 1
 3a8:	80 40       	sbci	r24, 0x00	; 0
 3aa:	90 40       	sbci	r25, 0x00	; 0
 3ac:	e1 f7       	brne	.-8      	; 0x3a6 <main+0x48>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <main+0x52>
 3b0:	00 00       	nop
	_delay_ms(1000);
	disp_cmd(0X01);
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
 3ba:	e3 ef       	ldi	r30, 0xF3	; 243
 3bc:	f1 e0       	ldi	r31, 0x01	; 1
 3be:	31 97       	sbiw	r30, 0x01	; 1
 3c0:	f1 f7       	brne	.-4      	; 0x3be <main+0x60>
 3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <main+0x66>
 3c4:	00 00       	nop
	_delay_ms(2);
	disp_cmd(0X80);
 3c6:	80 e8       	ldi	r24, 0x80	; 128
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
	disp_string("Enter the paswrd");
 3ce:	88 e6       	ldi	r24, 0x68	; 104
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <_Z11disp_stringPc>

	lcd_init();
	special_charringbell1();//2
	special_charringbell2();//3
	special_charringbell3();//4
	int y=0,k=0;
 3d6:	00 e0       	ldi	r16, 0x00	; 0
 3d8:	10 e0       	ldi	r17, 0x00	; 0
 3da:	14 c0       	rjmp	.+40     	; 0x404 <main+0xa6>
				break;
			}
			
			else
			{
				y=(y * 10+k);
 3dc:	98 01       	movw	r18, r16
 3de:	22 0f       	add	r18, r18
 3e0:	33 1f       	adc	r19, r19
 3e2:	00 0f       	add	r16, r16
 3e4:	11 1f       	adc	r17, r17
 3e6:	00 0f       	add	r16, r16
 3e8:	11 1f       	adc	r17, r17
 3ea:	00 0f       	add	r16, r16
 3ec:	11 1f       	adc	r17, r17
 3ee:	02 0f       	add	r16, r18
 3f0:	13 1f       	adc	r17, r19
 3f2:	08 0f       	add	r16, r24
 3f4:	19 1f       	adc	r17, r25
				disp_cmd(0XC4);
 3f6:	84 ec       	ldi	r24, 0xC4	; 196
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
				disp_num(y);
 3fe:	c8 01       	movw	r24, r16
 400:	0e 94 61 01 	call	0x2c2	; 0x2c2 <_Z8disp_numj>
	while (1)
	{
		
		while(k!=8)
		{
			int k=disp_key();
 404:	0e 94 41 00 	call	0x82	; 0x82 <_Z8disp_keyv>
			if (k==0)
 408:	00 97       	sbiw	r24, 0x00	; 0
 40a:	41 f7       	brne	.-48     	; 0x3dc <main+0x7e>
				y=(y * 10+k);
				disp_cmd(0XC4);
				disp_num(y);
			}
		}
		if (y==1234)
 40c:	02 3d       	cpi	r16, 0xD2	; 210
 40e:	f4 e0       	ldi	r31, 0x04	; 4
 410:	1f 07       	cpc	r17, r31
 412:	09 f0       	breq	.+2      	; 0x416 <main+0xb8>
 414:	1a c1       	rjmp	.+564    	; 0x64a <__stack+0x1eb>
		{
			disp_cmd(0X01);
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
 41e:	83 ef       	ldi	r24, 0xF3	; 243
 420:	91 e0       	ldi	r25, 0x01	; 1
 422:	01 97       	sbiw	r24, 0x01	; 1
 424:	f1 f7       	brne	.-4      	; 0x422 <main+0xc4>
 426:	00 c0       	rjmp	.+0      	; 0x428 <main+0xca>
 428:	00 00       	nop
			_delay_ms(2);
			disp_cmd(0X80);
 42a:	80 e8       	ldi	r24, 0x80	; 128
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
			disp_string( "PASSWORD MATCHED");
 432:	89 e7       	ldi	r24, 0x79	; 121
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	0e 94 51 01 	call	0x2a2	; 0x2a2 <_Z11disp_stringPc>
 43a:	9f e7       	ldi	r25, 0x7F	; 127
 43c:	ea e1       	ldi	r30, 0x1A	; 26
 43e:	f6 e0       	ldi	r31, 0x06	; 6
 440:	91 50       	subi	r25, 0x01	; 1
 442:	e0 40       	sbci	r30, 0x00	; 0
 444:	f0 40       	sbci	r31, 0x00	; 0
 446:	e1 f7       	brne	.-8      	; 0x440 <main+0xe2>
 448:	00 c0       	rjmp	.+0      	; 0x44a <main+0xec>
 44a:	00 00       	nop
			_delay_ms(2000);
			disp_cmd(0X01);
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
 454:	83 ef       	ldi	r24, 0xF3	; 243
 456:	91 e0       	ldi	r25, 0x01	; 1
 458:	01 97       	sbiw	r24, 0x01	; 1
 45a:	f1 f7       	brne	.-4      	; 0x458 <main+0xfa>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <main+0x100>
 45e:	00 00       	nop
			_delay_ms(2);
			  while(1)
			  {
				  start:
				  for(h1=0;h1<=2;h1++)
 460:	a1 2c       	mov	r10, r1
 462:	b1 2c       	mov	r11, r1

	lcd_init();
	special_charringbell1();//2
	special_charringbell2();//3
	special_charringbell3();//4
	int y=0,k=0;
 464:	21 2c       	mov	r2, r1
 466:	31 2c       	mov	r3, r1
 468:	2b 82       	std	Y+3, r2	; 0x03
 46a:	3c 82       	std	Y+4, r3	; 0x04
 46c:	2d 82       	std	Y+5, r2	; 0x05
 46e:	3e 82       	std	Y+6, r3	; 0x06
 470:	2f 82       	std	Y+7, r2	; 0x07
 472:	38 86       	std	Y+8, r3	; 0x08
 474:	29 82       	std	Y+1, r2	; 0x01
 476:	3a 82       	std	Y+2, r3	; 0x02
 478:	0f 2e       	mov	r0, r31
 47a:	fa e0       	ldi	r31, 0x0A	; 10
 47c:	4f 2e       	mov	r4, r31
 47e:	51 2c       	mov	r5, r1
 480:	f0 2d       	mov	r31, r0
 482:	04 c1       	rjmp	.+520    	; 0x68c <__stack+0x22d>
				  for(h1=0;h1<=2;h1++)

				  {
					  for(h0=0;h0<=9;h0++)
					  {
						  if(h1==2 && h0==4)
 484:	f2 e0       	ldi	r31, 0x02	; 2
 486:	af 16       	cp	r10, r31
 488:	b1 04       	cpc	r11, r1
 48a:	09 f0       	breq	.+2      	; 0x48e <__stack+0x2f>
 48c:	c8 c0       	rjmp	.+400    	; 0x61e <__stack+0x1bf>
 48e:	24 e0       	ldi	r18, 0x04	; 4
 490:	82 16       	cp	r8, r18
 492:	91 04       	cpc	r9, r1
 494:	09 f4       	brne	.+2      	; 0x498 <__stack+0x39>
 496:	f9 c0       	rjmp	.+498    	; 0x68a <__stack+0x22b>
 498:	cb 80       	ldd	r12, Y+3	; 0x03
 49a:	dc 80       	ldd	r13, Y+4	; 0x04
 49c:	c2 c0       	rjmp	.+388    	; 0x622 <__stack+0x1c3>
										  
										  
										  for (z=0;z<=9;z++)
										  {
											  
											  disp_cmd(0X80);
 49e:	80 e8       	ldi	r24, 0x80	; 128
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
											  disp_string ( "ALARM CLOCK");
 4a6:	8a e8       	ldi	r24, 0x8A	; 138
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	0e 94 51 01 	call	0x2a2	; 0x2a2 <_Z11disp_stringPc>
											  if (  s1==0 && s0==0)
 4ae:	01 15       	cp	r16, r1
 4b0:	11 05       	cpc	r17, r1
 4b2:	d9 f5       	brne	.+118    	; 0x52a <__stack+0xcb>
 4b4:	e1 14       	cp	r14, r1
 4b6:	f1 04       	cpc	r15, r1
 4b8:	c1 f5       	brne	.+112    	; 0x52a <__stack+0xcb>
											  {

												  disp_cmd(0X8F);
 4ba:	8f e8       	ldi	r24, 0x8F	; 143
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
												  
												  disp_data(2);
 4c2:	82 e0       	ldi	r24, 0x02	; 2
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
 4ca:	83 ef       	ldi	r24, 0xF3	; 243
 4cc:	91 e0       	ldi	r25, 0x01	; 1
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <__stack+0x6f>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <__stack+0x75>
 4d4:	00 00       	nop
												  
												  
												  
												  //disp_cmd(0X01);
												  _delay_ms(2);
												  disp_cmd(0X8F);
 4d6:	8f e8       	ldi	r24, 0x8F	; 143
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
												  disp_data(3);
 4de:	83 e0       	ldi	r24, 0x03	; 3
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
 4e6:	e3 ef       	ldi	r30, 0xF3	; 243
 4e8:	f1 e0       	ldi	r31, 0x01	; 1
 4ea:	31 97       	sbiw	r30, 0x01	; 1
 4ec:	f1 f7       	brne	.-4      	; 0x4ea <__stack+0x8b>
 4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <__stack+0x91>
 4f0:	00 00       	nop
 4f2:	83 ef       	ldi	r24, 0xF3	; 243
 4f4:	91 e0       	ldi	r25, 0x01	; 1
 4f6:	01 97       	sbiw	r24, 0x01	; 1
 4f8:	f1 f7       	brne	.-4      	; 0x4f6 <__stack+0x97>
 4fa:	00 c0       	rjmp	.+0      	; 0x4fc <__stack+0x9d>
 4fc:	00 00       	nop
												  _delay_ms(2);
												  //disp_cmd(0X01);
												  _delay_ms(2);
												  disp_cmd(0X8F);
 4fe:	8f e8       	ldi	r24, 0x8F	; 143
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
												  disp_data(4);
 506:	84 e0       	ldi	r24, 0x04	; 4
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
 50e:	e3 ef       	ldi	r30, 0xF3	; 243
 510:	f1 e0       	ldi	r31, 0x01	; 1
 512:	31 97       	sbiw	r30, 0x01	; 1
 514:	f1 f7       	brne	.-4      	; 0x512 <__stack+0xb3>
 516:	00 c0       	rjmp	.+0      	; 0x518 <__stack+0xb9>
 518:	00 00       	nop
												  _delay_ms(2);
												  disp_cmd(0X8F);
 51a:	8f e8       	ldi	r24, 0x8F	; 143
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
												  disp_data(' ');
 522:	80 e2       	ldi	r24, 0x20	; 32
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z9disp_datai>
												  
											  }
											  disp_cmd(0XC2);
 52a:	82 ec       	ldi	r24, 0xC2	; 194
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
											  disp_num(h1);
 532:	c5 01       	movw	r24, r10
 534:	0e 94 61 01 	call	0x2c2	; 0x2c2 <_Z8disp_numj>
 538:	81 ee       	ldi	r24, 0xE1	; 225
 53a:	94 e0       	ldi	r25, 0x04	; 4
 53c:	01 97       	sbiw	r24, 0x01	; 1
 53e:	f1 f7       	brne	.-4      	; 0x53c <__stack+0xdd>
 540:	00 c0       	rjmp	.+0      	; 0x542 <__stack+0xe3>
 542:	00 00       	nop
											  _delay_ms(5);
											  disp_cmd(0XC3);
 544:	83 ec       	ldi	r24, 0xC3	; 195
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
											  disp_num(h0);
 54c:	c4 01       	movw	r24, r8
 54e:	0e 94 61 01 	call	0x2c2	; 0x2c2 <_Z8disp_numj>
 552:	e1 ee       	ldi	r30, 0xE1	; 225
 554:	f4 e0       	ldi	r31, 0x04	; 4
 556:	31 97       	sbiw	r30, 0x01	; 1
 558:	f1 f7       	brne	.-4      	; 0x556 <__stack+0xf7>
 55a:	00 c0       	rjmp	.+0      	; 0x55c <__stack+0xfd>
 55c:	00 00       	nop
											  _delay_ms(5);
											  disp_cmd(0XC5);
 55e:	85 ec       	ldi	r24, 0xC5	; 197
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
											  disp_num(m1);
 566:	c6 01       	movw	r24, r12
 568:	0e 94 61 01 	call	0x2c2	; 0x2c2 <_Z8disp_numj>
 56c:	81 ee       	ldi	r24, 0xE1	; 225
 56e:	94 e0       	ldi	r25, 0x04	; 4
 570:	01 97       	sbiw	r24, 0x01	; 1
 572:	f1 f7       	brne	.-4      	; 0x570 <__stack+0x111>
 574:	00 c0       	rjmp	.+0      	; 0x576 <__stack+0x117>
 576:	00 00       	nop
											  _delay_ms(5);
											  disp_cmd(0XC6);
 578:	86 ec       	ldi	r24, 0xC6	; 198
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
											  disp_num(m0);
 580:	c3 01       	movw	r24, r6
 582:	0e 94 61 01 	call	0x2c2	; 0x2c2 <_Z8disp_numj>
 586:	e1 ee       	ldi	r30, 0xE1	; 225
 588:	f4 e0       	ldi	r31, 0x04	; 4
 58a:	31 97       	sbiw	r30, 0x01	; 1
 58c:	f1 f7       	brne	.-4      	; 0x58a <__stack+0x12b>
 58e:	00 c0       	rjmp	.+0      	; 0x590 <__stack+0x131>
 590:	00 00       	nop
											  _delay_ms(5);
											  disp_cmd(0XC8);
 592:	88 ec       	ldi	r24, 0xC8	; 200
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
											  disp_num(s1);
 59a:	c8 01       	movw	r24, r16
 59c:	0e 94 61 01 	call	0x2c2	; 0x2c2 <_Z8disp_numj>
 5a0:	81 ee       	ldi	r24, 0xE1	; 225
 5a2:	94 e0       	ldi	r25, 0x04	; 4
 5a4:	01 97       	sbiw	r24, 0x01	; 1
 5a6:	f1 f7       	brne	.-4      	; 0x5a4 <__stack+0x145>
 5a8:	00 c0       	rjmp	.+0      	; 0x5aa <__stack+0x14b>
 5aa:	00 00       	nop
											  _delay_ms(5);
											  disp_cmd(0XC9);
 5ac:	89 ec       	ldi	r24, 0xC9	; 201
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
											  disp_num(s0);
 5b4:	c7 01       	movw	r24, r14
 5b6:	0e 94 61 01 	call	0x2c2	; 0x2c2 <_Z8disp_numj>
 5ba:	e3 ef       	ldi	r30, 0xF3	; 243
 5bc:	f1 e0       	ldi	r31, 0x01	; 1
 5be:	31 97       	sbiw	r30, 0x01	; 1
 5c0:	f1 f7       	brne	.-4      	; 0x5be <__stack+0x15f>
 5c2:	00 c0       	rjmp	.+0      	; 0x5c4 <__stack+0x165>
 5c4:	00 00       	nop
 5c6:	89 85       	ldd	r24, Y+9	; 0x09
 5c8:	9a 85       	ldd	r25, Y+10	; 0x0a
 5ca:	01 97       	sbiw	r24, 0x01	; 1
 5cc:	9a 87       	std	Y+10, r25	; 0x0a
 5ce:	89 87       	std	Y+9, r24	; 0x09
								  {
									  for(s0=0;s0<=9;s0++)
									  {
										  
										  
										  for (z=0;z<=9;z++)
 5d0:	89 2b       	or	r24, r25
 5d2:	09 f0       	breq	.+2      	; 0x5d6 <__stack+0x177>
 5d4:	64 cf       	rjmp	.-312    	; 0x49e <__stack+0x3f>
								  
								  
								  
								  for(s1=0;s1<=5;s1++)
								  {
									  for(s0=0;s0<=9;s0++)
 5d6:	9f ef       	ldi	r25, 0xFF	; 255
 5d8:	e9 1a       	sub	r14, r25
 5da:	f9 0a       	sbc	r15, r25
 5dc:	ea e0       	ldi	r30, 0x0A	; 10
 5de:	ee 16       	cp	r14, r30
 5e0:	f1 04       	cpc	r15, r1
 5e2:	19 f0       	breq	.+6      	; 0x5ea <__stack+0x18b>

	lcd_init();
	special_charringbell1();//2
	special_charringbell2();//3
	special_charringbell3();//4
	int y=0,k=0;
 5e4:	5a 86       	std	Y+10, r5	; 0x0a
 5e6:	49 86       	std	Y+9, r4	; 0x09
 5e8:	5a cf       	rjmp	.-332    	; 0x49e <__stack+0x3f>
							  for(m0=0;m0<=9;m0++)
							  {
								  
								  
								  
								  for(s1=0;s1<=5;s1++)
 5ea:	0f 5f       	subi	r16, 0xFF	; 255
 5ec:	1f 4f       	sbci	r17, 0xFF	; 255
 5ee:	06 30       	cpi	r16, 0x06	; 6
 5f0:	11 05       	cpc	r17, r1
 5f2:	19 f0       	breq	.+6      	; 0x5fa <__stack+0x19b>

	lcd_init();
	special_charringbell1();//2
	special_charringbell2();//3
	special_charringbell3();//4
	int y=0,k=0;
 5f4:	e9 80       	ldd	r14, Y+1	; 0x01
 5f6:	fa 80       	ldd	r15, Y+2	; 0x02
 5f8:	f5 cf       	rjmp	.-22     	; 0x5e4 <__stack+0x185>
						  {
							  goto start;
						  }
						  for(m1=0;m1<=5;m1++)
						  {
							  for(m0=0;m0<=9;m0++)
 5fa:	ff ef       	ldi	r31, 0xFF	; 255
 5fc:	6f 1a       	sub	r6, r31
 5fe:	7f 0a       	sbc	r7, r31
 600:	2a e0       	ldi	r18, 0x0A	; 10
 602:	62 16       	cp	r6, r18
 604:	71 04       	cpc	r7, r1
 606:	19 f0       	breq	.+6      	; 0x60e <__stack+0x1af>

	lcd_init();
	special_charringbell1();//2
	special_charringbell2();//3
	special_charringbell3();//4
	int y=0,k=0;
 608:	0f 81       	ldd	r16, Y+7	; 0x07
 60a:	18 85       	ldd	r17, Y+8	; 0x08
 60c:	f3 cf       	rjmp	.-26     	; 0x5f4 <__stack+0x195>
					  {
						  if(h1==2 && h0==4)
						  {
							  goto start;
						  }
						  for(m1=0;m1<=5;m1++)
 60e:	8f ef       	ldi	r24, 0xFF	; 255
 610:	c8 1a       	sub	r12, r24
 612:	d8 0a       	sbc	r13, r24
 614:	96 e0       	ldi	r25, 0x06	; 6
 616:	c9 16       	cp	r12, r25
 618:	d1 04       	cpc	r13, r1
 61a:	19 f4       	brne	.+6      	; 0x622 <__stack+0x1c3>
 61c:	05 c0       	rjmp	.+10     	; 0x628 <__stack+0x1c9>
				  for(h1=0;h1<=2;h1++)

				  {
					  for(h0=0;h0<=9;h0++)
					  {
						  if(h1==2 && h0==4)
 61e:	cb 80       	ldd	r12, Y+3	; 0x03
 620:	dc 80       	ldd	r13, Y+4	; 0x04

	lcd_init();
	special_charringbell1();//2
	special_charringbell2();//3
	special_charringbell3();//4
	int y=0,k=0;
 622:	6d 80       	ldd	r6, Y+5	; 0x05
 624:	7e 80       	ldd	r7, Y+6	; 0x06
 626:	f0 cf       	rjmp	.-32     	; 0x608 <__stack+0x1a9>
			  {
				  start:
				  for(h1=0;h1<=2;h1++)

				  {
					  for(h0=0;h0<=9;h0++)
 628:	ef ef       	ldi	r30, 0xFF	; 255
 62a:	8e 1a       	sub	r8, r30
 62c:	9e 0a       	sbc	r9, r30
 62e:	fa e0       	ldi	r31, 0x0A	; 10
 630:	8f 16       	cp	r8, r31
 632:	91 04       	cpc	r9, r1
 634:	09 f0       	breq	.+2      	; 0x638 <__stack+0x1d9>
 636:	26 cf       	rjmp	.-436    	; 0x484 <__stack+0x25>
			disp_cmd(0X01);
			_delay_ms(2);
			  while(1)
			  {
				  start:
				  for(h1=0;h1<=2;h1++)
 638:	2f ef       	ldi	r18, 0xFF	; 255
 63a:	a2 1a       	sub	r10, r18
 63c:	b2 0a       	sbc	r11, r18
 63e:	83 e0       	ldi	r24, 0x03	; 3
 640:	a8 16       	cp	r10, r24
 642:	b1 04       	cpc	r11, r1
 644:	1c f1       	brlt	.+70     	; 0x68c <__stack+0x22d>
 646:	51 01       	movw	r10, r2
 648:	21 c0       	rjmp	.+66     	; 0x68c <__stack+0x22d>
			  }
			
			
		}
		else{
			disp_cmd(0X01);
 64a:	81 e0       	ldi	r24, 0x01	; 1
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
 652:	e3 ef       	ldi	r30, 0xF3	; 243
 654:	f1 e0       	ldi	r31, 0x01	; 1
 656:	31 97       	sbiw	r30, 0x01	; 1
 658:	f1 f7       	brne	.-4      	; 0x656 <__stack+0x1f7>
 65a:	00 c0       	rjmp	.+0      	; 0x65c <__stack+0x1fd>
 65c:	00 00       	nop
			_delay_ms(2);
			disp_cmd(0X80);
 65e:	80 e8       	ldi	r24, 0x80	; 128
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	0e 94 b2 00 	call	0x164	; 0x164 <_Z8disp_cmdj>
			disp_string( "PASSWORD NOT MATCHED");
 666:	86 e9       	ldi	r24, 0x96	; 150
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 94 51 01 	call	0x2a2	; 0x2a2 <_Z11disp_stringPc>
 66e:	ff e3       	ldi	r31, 0x3F	; 63
 670:	2d e0       	ldi	r18, 0x0D	; 13
 672:	83 e0       	ldi	r24, 0x03	; 3
 674:	f1 50       	subi	r31, 0x01	; 1
 676:	20 40       	sbci	r18, 0x00	; 0
 678:	80 40       	sbci	r24, 0x00	; 0
 67a:	e1 f7       	brne	.-8      	; 0x674 <__stack+0x215>
 67c:	00 c0       	rjmp	.+0      	; 0x67e <__stack+0x21f>
 67e:	00 00       	nop
			_delay_ms(1000);
			disp_string("try again");
 680:	8b ea       	ldi	r24, 0xAB	; 171
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	0e 94 51 01 	call	0x2a2	; 0x2a2 <_Z11disp_stringPc>
	disp_cmd(0X01);
	_delay_ms(2);
	disp_cmd(0X80);
	disp_string("Enter the paswrd");
	
	while (1)
 688:	bd ce       	rjmp	.-646    	; 0x404 <main+0xa6>
			disp_cmd(0X01);
			_delay_ms(2);
			  while(1)
			  {
				  start:
				  for(h1=0;h1<=2;h1++)
 68a:	51 01       	movw	r10, r2

	lcd_init();
	special_charringbell1();//2
	special_charringbell2();//3
	special_charringbell3();//4
	int y=0,k=0;
 68c:	41 01       	movw	r8, r2
 68e:	fa ce       	rjmp	.-524    	; 0x484 <__stack+0x25>

00000690 <__umulhisi3>:
 690:	a2 9f       	mul	r26, r18
 692:	b0 01       	movw	r22, r0
 694:	b3 9f       	mul	r27, r19
 696:	c0 01       	movw	r24, r0
 698:	a3 9f       	mul	r26, r19
 69a:	01 d0       	rcall	.+2      	; 0x69e <__umulhisi3+0xe>
 69c:	b2 9f       	mul	r27, r18
 69e:	70 0d       	add	r23, r0
 6a0:	81 1d       	adc	r24, r1
 6a2:	11 24       	eor	r1, r1
 6a4:	91 1d       	adc	r25, r1
 6a6:	08 95       	ret

000006a8 <_exit>:
 6a8:	f8 94       	cli

000006aa <__stop_program>:
 6aa:	ff cf       	rjmp	.-2      	; 0x6aa <__stop_program>
